{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIANG\\\\Documents\\\\SpringProject\\\\sample-project-v2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\EmployeeTest\\\\EmployeeTestTable.jsx\";\nimport React, { Component } from \"react\";\nimport { IconButton, Table, TableHead, TableBody, TableRow, TableCell, Icon, TablePagination, Button, Card, TextField, Checkbox } from \"@material-ui/core\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { searchByPage, getItemById, deleteEmployee } from \"./EmployeeTestService\";\nimport EmployeeTestEditorDialog from \"./EmployeeTestEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport shortid from \"shortid\";\nimport AutoComplete from \"@material-ui/lab/Autocomplete\";\n\nfunction MaterialButton(props) {\n  const item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => props.onSelect(item, 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => props.onSelect(item, 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"dektee\")));\n}\n\nclass EmployeeTestTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employeeId: \"\",\n      keyword: \"\",\n      rowsPerPage: 25,\n      page: 0,\n      item: {},\n      userList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectAllItem: false,\n      selectedList: [],\n      totalElements: 0,\n      roles: [],\n      role: [],\n      shouldOpenConfirmationDeleteAllDialog: false,\n      active: \"\"\n    };\n    this.numSelected = 0;\n    this.rowCount = 0;\n\n    this.handleTextChange = event => {\n      this.setState({\n        keyword: event.target.value\n      }, function () {});\n    };\n\n    this.handleKeyPress = event => {\n      if (event.key === \"Enter\") {\n        this.search();\n      }\n    };\n\n    this.setPage = page => {\n      this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    this.setRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    this.handleChangePage = (event, newPage) => {\n      this.setPage(newPage);\n    };\n\n    this.editDataAfterGetData = itemList => {\n      var _this$state$itemList;\n\n      let activeFalse = /*#__PURE__*/React.createElement(CloseIcon, {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }\n      });\n      let activeTrue = /*#__PURE__*/React.createElement(DoneIcon, {\n        style: {\n          color: \"green\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 22\n        }\n      });\n      let itemListUpdate = this.state.itemList;\n      let listLength = (_this$state$itemList = this.state.itemList) === null || _this$state$itemList === void 0 ? void 0 : _this$state$itemList.length;\n\n      for (let i = 0; i < listLength; i++) {\n        itemListUpdate[i].active = this.itemList[i].active === true ? activeTrue : activeFalse;\n      }\n\n      this.setState({\n        itemList: itemListUpdate\n      });\n    };\n\n    this.updatePageData = () => {\n      // getAllEmployees().then(({ data }) => this.setState({ userList: [...data] }));\n      var searchObject = {};\n      searchObject.keyword = this.state.keyword;\n      searchObject.pageIndex = this.state.pageIndex;\n      searchObject.pageSize = this.state.pageSize;\n      searchObject.roles = this.state.roles;\n      searchObject.isActive = this.state.isActive;\n      searchByPage(searchObject).then(({\n        data\n      }) => {\n        this.setState({\n          itemList: [...data.content],\n          totalElements: data.totalElements\n        }, console.log(data));\n        this.editDataAfterGetData(this.state.itemList);\n      });\n    };\n\n    this.handleDownload = () => {\n      var blob = new Blob([\"hello world\"], {\n        type: \"text/plain;charset=utf-8\"\n      });\n    };\n\n    this.handleDialogClose = () => {\n      this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n      this.updatePageData();\n    };\n\n    this.handleOkEditDialogClose = () => {\n      this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n      this.updatePageData();\n    };\n\n    this.handleDeleteEmployee = id => {\n      this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    this.handleEditEmployee = item => {\n      getItemById(item.id).then(result => {\n        this.setState({\n          item: result.data,\n          shouldOpenEditorDialog: true\n        });\n      });\n    };\n\n    this.setValue = newValue => {\n      this.setState({\n        active: newValue\n      }, function () {\n        this.search();\n      });\n    };\n\n    this.handleConfirmationResponse = () => {\n      deleteEmployee(this.state.user).then(() => {\n        this.handleDialogClose();\n      });\n    };\n\n    this.handleEditItem = item => {\n      this.setState({\n        item: item,\n        shouldOpenEditorDialog: true\n      });\n    };\n\n    this.handleDelete = id => {\n      this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n  }\n\n  search() {\n    this.setState({\n      page: 0\n    }, function () {\n      var searchObject = {};\n      searchObject.keyword = this.state.keyword;\n      searchObject.pageIndex = this.state.page + 1;\n      searchObject.pageSize = this.state.pageSize;\n      searchObject.isActive = this.state.isActive;\n      searchByPage(searchObject).then(({\n        data\n      }) => {\n        this.setState({\n          itemList: [...data.content],\n          totalElements: data.totalElements\n        });\n        this.editDataAfterGetData(this.state.itemList);\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n\n  // handleDeleteAll =(event)=>{\n  //   this.han\n  // };\n  render() {\n    let _this$state = this.state,\n        keyword = _this$state.keyword,\n        rowsPerPage = _this$state.rowsPerPage,\n        page = _this$state.page,\n        item = _this$state.item,\n        itemList = _this$state.itemList,\n        userList = _this$state.userList,\n        shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n        shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog;\n    let columns = [{\n      title: \"Action\",\n      field: \"custom\",\n      align: \"center\",\n      render: (rowData, method) => /*#__PURE__*/React.createElement(MaterialButton, {\n        item: rowData,\n        onSelect: (rowData, method) => {\n          if (method === 0) {\n            this.props.history.push({\n              pathname: \"/a\",\n              state: {\n                rowsPerPage: 25,\n                page: 0,\n                keyword: \"\"\n              }\n            });\n          } else if (method === 1) {\n            this.handleDelete(rowData.id);\n          } else {\n            alert(\"Call selected Here: \" + rowData.id);\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }\n      })\n    }, {\n      headerStyle: {\n        paddingLeft: \"3px\"\n      },\n      cellStyle: {\n        paddingLeft: \"3px\"\n      },\n      title: \"STT\",\n      field: \"code\",\n      width: \"7%\",\n      render: rowData => page * rowsPerPage + (rowData.tableData.id + 1)\n    }, {\n      title: \"Employee Id\",\n      field: \"id\",\n      width: \"7%\"\n    }, {\n      title: \"Employee Name\",\n      field: \"name\",\n      width: \"17%\"\n    }, {\n      title: \"Employee Email\",\n      field: \"email\",\n      width: \"28%\"\n    }, {\n      title: \"Employee Phone\",\n      field: \"phone\",\n      width: \"7%\"\n    }, {\n      title: \"Employee Age\",\n      field: \"age\",\n      width: \"7%\"\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      routeSegments: [{\n        name: \"Employee Table\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      label: \"Search\",\n      style: {\n        marginLeft: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"checkEmployId\",\n      inputProps: {\n        'aria-label': 'Checkbox A'\n      },\n      text: \"M\\xE3 nh\\xE2n vi\\xEAn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }\n    }, \"M\\xE3 nh\\xE2n vi\\xEAn\"), /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"checkEmployName\",\n      inputProps: {\n        'aria-label': 'Checkbox A'\n      },\n      text: \"T\\xEAn  nh\\xE2n vi\\xEAn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }\n    }, \"T\\xEAn Nh\\xE2n vi\\xEAn\"), /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"checkEmployEmail\",\n      inputProps: {\n        'aria-label': 'Checkbox A'\n      },\n      text: \"M\\xE3 nh\\xE2n vi\\xEAn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"checkEmployPhone\",\n      inputProps: {\n        'aria-label': 'Checkbox A'\n      },\n      text: \"M\\xE3 nh\\xE2n vi\\xEAn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }\n    }, \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"), /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"checkEmployAge\",\n      inputProps: {\n        'aria-label': 'Checkbox A'\n      },\n      text: \"Tu\\u1ED5i nh\\xE2n vi\\xEAn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }\n    }, \"Tu\\u1ED5i\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mb-16\",\n      variant: \"contained\",\n      color: \"primary\" //onClick={() => this.setState({ shouldOpenEditorDialog: true })}\n      ,\n      style: {\n        marginLeft: \"10px\",\n        marginRight: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }\n    }, \"T\\xECm ki\\u1EBFm\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mb-16\",\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginRight: \"10px\"\n      },\n      onClick: () => this.setState({\n        title: \"Add New Member\",\n        shouldOpenEditorDialog: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }\n    }, \"Add New Member\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mb-16\",\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginRight: \"20px\"\n      } //onClick={() => this.setState({ shouldOpenEditorDialog: true })}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }\n    }, \"Xu\\u1EA5t file excel\"), /*#__PURE__*/React.createElement(Card, {\n      className: \"w-100 overflow-auto\",\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"crud-table\",\n      style: {\n        whiteSpace: \"pre\",\n        minWidth: \"750px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }\n    }, \"STT\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }\n    }, \"M\\xE3 nh\\xE2n vi\\xEAn\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }\n    }, \"T\\xEAn nh\\xE2n vi\\xEAn\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }\n    }, \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }\n    }, \"Tu\\u1ED5i\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }\n    }, \"Is Active\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 13\n      }\n    }, userList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user, index) => /*#__PURE__*/React.createElement(TableRow, {\n      key: shortid.generate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 21\n      }\n    }, page * rowsPerPage + 1), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 21\n      }\n    }, user.id), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 21\n      }\n    }, user.code), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 21\n      }\n    }, user.name), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 21\n      }\n    }, user.email), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }\n    }, user.phone), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 21\n      }\n    }, user.age), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }\n    }, user.isActive ? /*#__PURE__*/React.createElement(\"small\", {\n      className: \"border-radius-4 bg-primary text-white px-8 py-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 25\n      }\n    }, \"active\") : /*#__PURE__*/React.createElement(\"small\", {\n      className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 27\n      }\n    }, \"inactive\")), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0 border-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.setState({\n        uid: user.id,\n        shouldOpenEditorDialog: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 25\n      }\n    }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.handleDeleteUser(user),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 25\n      }\n    }, \"delete\"))))))), /*#__PURE__*/React.createElement(TablePagination, {\n      className: \"px-16\",\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: userList.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        \"aria-label\": \"Previous Page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"Next Page\"\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.setRowsPerPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }\n    }), shouldOpenEditorDialog && /*#__PURE__*/React.createElement(EmployeeTestEditorDialog, {\n      handleClose: this.handleDialogClose,\n      open: shouldOpenEditorDialog,\n      uid: this.state.uid,\n      title: \"Update Member\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 13\n      }\n    }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n      open: shouldOpenConfirmationDialog,\n      onConfirmDialogClose: this.handleDialogClose,\n      onYesClick: this.handleConfirmationResponse,\n      text: \"Are you sure to delete?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default EmployeeTestTable;","map":{"version":3,"sources":["C:/Users/GIANG/Documents/SpringProject/sample-project-v2/client/react/src/app/views/EmployeeTest/EmployeeTestTable.jsx"],"names":["React","Component","IconButton","Table","TableHead","TableBody","TableRow","TableCell","Icon","TablePagination","Button","Card","TextField","Checkbox","DoneIcon","CloseIcon","MaterialTable","MTableToolbar","searchByPage","getItemById","deleteEmployee","EmployeeTestEditorDialog","Breadcrumb","ConfirmationDialog","shortid","AutoComplete","MaterialButton","props","item","onSelect","EmployeeTestTable","state","employeeId","keyword","rowsPerPage","page","userList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","selectAllItem","selectedList","totalElements","roles","role","shouldOpenConfirmationDeleteAllDialog","active","numSelected","rowCount","handleTextChange","event","setState","target","value","handleKeyPress","key","search","setPage","updatePageData","setRowsPerPage","handleChangePage","newPage","editDataAfterGetData","itemList","activeFalse","color","activeTrue","itemListUpdate","listLength","length","i","searchObject","pageIndex","pageSize","isActive","then","data","content","console","log","handleDownload","blob","Blob","type","handleDialogClose","handleOkEditDialogClose","handleDeleteEmployee","id","handleEditEmployee","result","setValue","newValue","handleConfirmationResponse","user","handleEditItem","handleDelete","componentDidMount","render","columns","title","field","align","rowData","method","history","push","pathname","alert","headerStyle","paddingLeft","cellStyle","width","tableData","name","marginLeft","marginRight","whiteSpace","minWidth","slice","map","index","generate","code","email","phone","age","uid","handleDeleteUser"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  IconButton,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Icon,\n  TablePagination,\n  Button,\n  Card,\n  TextField,\n  Checkbox\n} from \"@material-ui/core\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport MaterialTable, { MTableToolbar } from \"material-table\"\nimport { searchByPage, getItemById,deleteEmployee} from \"./EmployeeTestService\";\nimport EmployeeTestEditorDialog from \"./EmployeeTestEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport shortid from \"shortid\";\nimport AutoComplete from \"@material-ui/lab/Autocomplete\";\nfunction MaterialButton(props) {\n  const item = props.item;\n  return (\n    <div>\n      <IconButton onClick={() => props.onSelect(item, 0)}>\n        <Icon color=\"primary\">edit</Icon>\n      </IconButton>\n      <IconButton onClick={() => props.onSelect(item, 1)}>\n        <Icon color=\"error\">dektee</Icon>\n      </IconButton>\n    </div>\n  );\n}\n\nclass EmployeeTestTable extends Component {\n  state = {\n    employeeId: \"\",\n    keyword: \"\",\n    rowsPerPage: 25,\n    page: 0,\n    item: {},\n    userList: [],\n    shouldOpenEditorDialog: false,\n    shouldOpenConfirmationDialog: false,\n    selectAllItem: false,\n    selectedList: [],\n    totalElements: 0,\n    roles: [],\n    role: [],\n    shouldOpenConfirmationDeleteAllDialog: false,\n    active: \"\",\n  };\n  numSelected = 0;\n  rowCount = 0;\n  handleTextChange = (event) => {\n    this.setState({ keyword: event.target.value }, function () { });\n  };\n  handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      this.search();\n    }\n  };\n  setPage = page => {\n    this.setState({ page }, function () {\n      this.updatePageData();\n    });\n  };\n\n  setRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\n      this.updatePageData();\n    });\n  };\n\n  handleChangePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n\n  editDataAfterGetData = (itemList) => {\n    let activeFalse = <CloseIcon style={{ color: \"red\" }} />;\n    let activeTrue = <DoneIcon style={{ color: \"green\" }} />;\n\n    let itemListUpdate = this.state.itemList;\n    let listLength = this.state.itemList?.length;\n    for (let i = 0; i < listLength; i++) {\n      itemListUpdate[i].active = (this.itemList[i].active === true) ? activeTrue : activeFalse;\n\n    }\n    this.setState({\n      itemList: itemListUpdate,\n    });\n  };\n  search() {\n    this.setState({ page: 0 }, function () {\n      var searchObject = {};\n      searchObject.keyword = this.state.keyword;\n      searchObject.pageIndex = this.state.page + 1;\n      searchObject.pageSize = this.state.pageSize;\n      searchObject.isActive = this.state.isActive;\n      searchByPage(searchObject).then(({ data }) => {\n        this.setState({\n          itemList: [...data.content],\n          totalElements: data.totalElements,\n        });\n        this.editDataAfterGetData(this.state.itemList);\n      });\n    });\n  }\n  updatePageData = () => {\n    // getAllEmployees().then(({ data }) => this.setState({ userList: [...data] }));\n    var searchObject = {};\n    searchObject.keyword = this.state.keyword;\n    searchObject.pageIndex = this.state.pageIndex;\n    searchObject.pageSize = this.state.pageSize;\n    searchObject.roles = this.state.roles;\n    searchObject.isActive = this.state.isActive;\n\n    searchByPage(searchObject).then(({ data }) => {\n      this.setState({\n        itemList: [...data.content],\n        totalElements: data.totalElements,\n      },\n        console.log(data)\n      );\n      this.editDataAfterGetData(this.state.itemList);\n    });\n  };\n  handleDownload = () => {\n    var blob = new Blob([\"hello world\"], {\n      type : \"text/plain;charset=utf-8\"\n    });\n  };\n\n  handleDialogClose = () => {\n    this.setState({\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenConfirmationDeleteAllDialog: false\n    });\n    this.updatePageData();\n  };\n  handleOkEditDialogClose = () => {\n    this.setState({\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenConfirmationDeleteAllDialog: false\n    });\n    this.updatePageData();\n  };\n  handleDeleteEmployee = (id) => {\n    this.setState({\n      id,\n      shouldOpenConfirmationDialog: true\n    });\n  };\n  handleEditEmployee = (item) => {\n    getItemById(item.id).then((result) => {\n      this.setState({\n        item: result.data,\n        shouldOpenEditorDialog: true,\n      });\n    });\n  };\n  setValue = (newValue) => {\n    this.setState({\n      active: newValue,\n    }, function () {\n      this.search();\n    });\n  };\n  handleConfirmationResponse = () => {\n    deleteEmployee(this.state.user).then(() => {\n      this.handleDialogClose();\n    });\n  };\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n\n  handleEditItem = (item) => {\n    this.setState({\n      item: item,\n      shouldOpenEditorDialog: true\n    });\n  };\n  handleDelete = (id) => {\n    this.setState({\n      id,\n      shouldOpenConfirmationDialog: true\n    });\n  };\n  // handleDeleteAll =(event)=>{\n  //   this.han\n  // };\n\n  render() {\n    let {\n      keyword,\n      rowsPerPage,\n      page,\n      item,\n      itemList,\n      userList,\n      shouldOpenConfirmationDialog,\n      shouldOpenEditorDialog\n    } = this.state;\n    let columns = [\n      {\n        title:\"Action\",\n        field:\"custom\",\n        align:\"center\",\n        render:(rowData,method)=>(\n          <MaterialButton\n          item={rowData}\n          onSelect={(rowData,method)=>{\n            if(method ===0){\n              this.props.history.push({\n                pathname:\"/a\",\n                state:{\n                  rowsPerPage:25,\n                  page:0,\n                  keyword:\"\",\n                }\n              })\n            }else if(method ===1){\n              this.handleDelete(rowData.id);\n            }else{\n              alert(\"Call selected Here: \"+rowData.id)\n            }\n          }}\n          />          \n        ),\n      },\n      {\n        headerStyle: {\n          paddingLeft: \"3px\",\n        },\n        cellStyle: {\n          paddingLeft: \"3px\",\n        },\n        title: \"STT\",\n        field: \"code\",\n        width: \"7%\",\n        render: (rowData) => page * rowsPerPage + (rowData.tableData.id + 1)\n      },\n      {\n        title: \"Employee Id\",\n        field: \"id\",\n        width: \"7%\"\n      },\n      {\n        title: \"Employee Name\",\n        field: \"name\",\n        width: \"17%\"\n      },\n      {\n        title: \"Employee Email\",\n        field: \"email\",\n        width: \"28%\"\n      },\n      {\n        title: \"Employee Phone\",\n        field: \"phone\",\n        width: \"7%\"\n      },\n      {\n        title: \"Employee Age\",\n        field: \"age\",\n        width: \"7%\"\n      }\n    ];\n    return (\n      <div className=\"m-sm-30\">\n        <div className=\"mb-sm-30\">\n          <Breadcrumb routeSegments={[{ name: \"Employee Table\" }]} />\n        </div>\n\n        <TextField id=\"standard-basic\" label=\"Search\" style={{ marginLeft: \"20px\" }} />\n\n        <Checkbox\n          value=\"checkEmployId\"\n          inputProps={{ 'aria-label': 'Checkbox A' }}\n          text=\"Mã nhân viên\"\n        />\n        <span>Mã nhân viên</span>\n        <Checkbox\n          value=\"checkEmployName\"\n          inputProps={{ 'aria-label': 'Checkbox A' }}\n          text=\"Tên  nhân viên\"\n        />\n        <span>Tên Nhân viên</span>\n        <Checkbox\n          value=\"checkEmployEmail\"\n          inputProps={{ 'aria-label': 'Checkbox A' }}\n          text=\"Mã nhân viên\"\n        />\n        <span>Email</span>\n        <Checkbox\n          value=\"checkEmployPhone\"\n          inputProps={{ 'aria-label': 'Checkbox A' }}\n          text=\"Mã nhân viên\"\n        />\n        <span>Số điện thoại</span>\n        <Checkbox\n          value=\"checkEmployAge\"\n          inputProps={{ 'aria-label': 'Checkbox A' }}\n          text=\"Tuổi nhân viên\"\n        />\n        <span>Tuổi</span>\n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"primary\"\n          //onClick={() => this.setState({ shouldOpenEditorDialog: true })}\n          style={{\n            marginLeft: \"10px\",\n            marginRight: \"10px\"\n          }}\n        >\n          Tìm kiếm\n        </Button>\n\n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginRight: \"10px\" }}\n          onClick={() => this.setState({\n            title: \"Add New Member\",\n            shouldOpenEditorDialog: true\n          })}\n        >\n          Add New Member\n        </Button>\n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginRight: \"20px\" }}\n        //onClick={() => this.setState({ shouldOpenEditorDialog: true })}\n        >\n          Xuất file excel\n        </Button>\n\n\n\n\n        <Card className=\"w-100 overflow-auto\" elevation={6}>\n          <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", minWidth: \"750px\" }}>\n            <TableHead>\n              <TableRow>\n                <TableCell>STT</TableCell>\n                <TableCell>Id</TableCell>\n                <TableCell>Mã nhân viên</TableCell>\n                <TableCell>Tên nhân viên</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Số điện thoại</TableCell>\n                <TableCell>Tuổi</TableCell>\n                <TableCell>Is Active</TableCell>\n                <TableCell>Action</TableCell>\n\n\n\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {userList\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((user, index) => (\n                  <TableRow key={shortid.generate()}>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {page * rowsPerPage + 1}\n                    </TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.id}\n                    </TableCell>\n                    <TableCell className=\"px-0\">\n                      {user.code}\n                    </TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.name}\n                    </TableCell>\n\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.email}\n                    </TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.phone}\n                    </TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.age}\n                    </TableCell>\n                    <TableCell className=\"px-0\">\n                      {user.isActive ? (\n                        <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\n                          active\n                        </small>\n                      ) : (\n                          <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\n                            inactive\n                          </small>\n                        )}\n                    </TableCell>\n                    <TableCell className=\"px-0 border-none\">\n                      <IconButton\n                        onClick={() =>\n                          this.setState({\n                            uid: user.id,\n                            shouldOpenEditorDialog: true\n                          })\n                        }\n                      >\n                        <Icon color=\"primary\">edit</Icon>\n                      </IconButton>\n                      <IconButton onClick={() => this.handleDeleteUser(user)}>\n                        <Icon color=\"error\">delete</Icon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n\n          <TablePagination\n            className=\"px-16\"\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={userList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\"\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.setRowsPerPage}\n          />\n\n          {shouldOpenEditorDialog && (\n            <EmployeeTestEditorDialog\n              handleClose={this.handleDialogClose}\n              open={shouldOpenEditorDialog}\n              uid={this.state.uid}\n              title={\"Update Member\"}\n            />\n          )}\n          {shouldOpenConfirmationDialog && (\n            <ConfirmationDialog\n              open={shouldOpenConfirmationDialog}\n              onConfirmDialogClose={this.handleDialogClose}\n              onYesClick={this.handleConfirmationResponse}\n              text=\"Are you sure to delete?\"\n            />\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default EmployeeTestTable;\n"]},"metadata":{},"sourceType":"module"}