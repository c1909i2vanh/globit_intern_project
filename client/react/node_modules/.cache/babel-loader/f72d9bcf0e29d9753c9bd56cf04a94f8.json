{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIANG\\\\Documents\\\\SpringProject\\\\sample-project-v2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\EmployeeTest\\\\EmployeeTestTable.jsx\";\nimport React, { Component } from \"react\";\nimport { IconButton, Table, TableHead, TableBody, TableRow, TableCell, Icon, TablePagination, Button, Card, TextField, Checkbox } from \"@material-ui/core\";\nimport { getAllEmployees, deleteUser } from \"./EmployeeTestService\";\nimport EmployeeTestEditorDialog from \"./EmployeeTestEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport shortid from \"shortid\";\n\nclass EmployeeTestTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      userList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false\n    };\n\n    this.setPage = page => {\n      this.setState({\n        page\n      });\n    };\n\n    this.setRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    this.handleChangePage = (event, newPage) => {\n      this.setPage(newPage);\n    };\n\n    this.handleDialogClose = () => {\n      this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n      this.updatePageData();\n    };\n\n    this.handleDeleteUser = user => {\n      this.setState({\n        user,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    this.handleConfirmationResponse = () => {\n      deleteUser(this.state.user).then(() => {\n        this.handleDialogClose();\n      });\n    };\n\n    this.updatePageData = () => {\n      // getAllEmployees().then(({ data }) => this.setState({ userList: [...data] }));\n      let searchDto = {};\n      searchDto.keyword = \"abc\";\n      getAllEmployees(searchDto).then(({\n        data\n      }) => {\n        this.setState({\n          userList: [...data]\n        });\n        console.log(this.state.userList);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n\n  render() {\n    let _this$state = this.state,\n        rowsPerPage = _this$state.rowsPerPage,\n        page = _this$state.page,\n        userList = _this$state.userList,\n        shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n        shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      routeSegments: [{\n        name: \"Employee Table\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      label: \"Search\",\n      style: {\n        marginLeft: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"checkEmployId\",\n      inputProps: {\n        'aria-label': 'Checkbox A'\n      },\n      text: \"M\\xE3 nh\\xE2n vi\\xEAn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"M\\xE3 nh\\xE2n vi\\xEAn\"), /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"checkEmployName\",\n      inputProps: {\n        'aria-label': 'Checkbox A'\n      },\n      text: \"T\\xEAn  nh\\xE2n vi\\xEAn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, \"T\\xEAn Nh\\xE2n vi\\xEAn\"), /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"checkEmployEmail\",\n      inputProps: {\n        'aria-label': 'Checkbox A'\n      },\n      text: \"M\\xE3 nh\\xE2n vi\\xEAn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"checkEmployPhone\",\n      inputProps: {\n        'aria-label': 'Checkbox A'\n      },\n      text: \"M\\xE3 nh\\xE2n vi\\xEAn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"), /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"checkEmployAge\",\n      inputProps: {\n        'aria-label': 'Checkbox A'\n      },\n      text: \"Tu\\u1ED5i nh\\xE2n vi\\xEAn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"Tu\\u1ED5i\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mb-16\",\n      variant: \"contained\",\n      color: \"primary\" //onClick={() => this.setState({ shouldOpenEditorDialog: true })}\n      ,\n      style: {\n        marginLeft: \"10px\",\n        marginRight: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, \"T\\xECm ki\\u1EBFm\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mb-16\",\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginRight: \"10px\"\n      },\n      onClick: () => this.setState({\n        shouldOpenEditorDialog: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, \"Add New Member\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mb-16\",\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginRight: \"20px\"\n      } //onClick={() => this.setState({ shouldOpenEditorDialog: true })}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, \"Xu\\u1EA5t file excel\"), /*#__PURE__*/React.createElement(Card, {\n      className: \"w-100 overflow-auto\",\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"crud-table\",\n      style: {\n        whiteSpace: \"pre\",\n        minWidth: \"750px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, \"STT\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, \"M\\xE3 nh\\xE2n vi\\xEAn\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, \"T\\xEAn nh\\xE2n vi\\xEAn\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, \"Tu\\u1ED5i\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, userList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user, index) => /*#__PURE__*/React.createElement(TableRow, {\n      key: shortid.generate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, page * rowsPerPage), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, user.id), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, user.code), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, user.name), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, user.email), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, user.phone), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, user.isActive ? /*#__PURE__*/React.createElement(\"small\", {\n      className: \"border-radius-4 bg-primary text-white px-8 py-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, \"active\") : /*#__PURE__*/React.createElement(\"small\", {\n      className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 27\n      }\n    }, \"inactive\")), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0 border-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.setState({\n        uid: user.id,\n        shouldOpenEditorDialog: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.handleDeleteUser(user),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, \"delete\"))))))), /*#__PURE__*/React.createElement(TablePagination, {\n      className: \"px-16\",\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: userList.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        \"aria-label\": \"Previous Page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"Next Page\"\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.setRowsPerPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }), shouldOpenEditorDialog && /*#__PURE__*/React.createElement(EmployeeTestEditorDialog, {\n      handleClose: this.handleDialogClose,\n      open: shouldOpenEditorDialog,\n      uid: this.state.uid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n      open: shouldOpenConfirmationDialog,\n      onConfirmDialogClose: this.handleDialogClose,\n      onYesClick: this.handleConfirmationResponse,\n      text: \"Are you sure to delete?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default EmployeeTestTable;","map":{"version":3,"sources":["C:/Users/GIANG/Documents/SpringProject/sample-project-v2/client/react/src/app/views/EmployeeTest/EmployeeTestTable.jsx"],"names":["React","Component","IconButton","Table","TableHead","TableBody","TableRow","TableCell","Icon","TablePagination","Button","Card","TextField","Checkbox","getAllEmployees","deleteUser","EmployeeTestEditorDialog","Breadcrumb","ConfirmationDialog","shortid","EmployeeTestTable","state","rowsPerPage","page","userList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","setPage","setState","setRowsPerPage","event","target","value","handleChangePage","newPage","handleDialogClose","updatePageData","handleDeleteUser","user","handleConfirmationResponse","then","searchDto","keyword","data","console","log","componentDidMount","render","name","marginLeft","marginRight","whiteSpace","minWidth","slice","map","index","generate","id","code","email","phone","isActive","uid","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  IconButton,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Icon,\n  TablePagination,\n  Button,\n  Card,\n  TextField,\n  Checkbox\n\n} from \"@material-ui/core\";\nimport { getAllEmployees, deleteUser } from \"./EmployeeTestService\";\nimport EmployeeTestEditorDialog from \"./EmployeeTestEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport shortid from \"shortid\";\n\nclass EmployeeTestTable extends Component {\n  state = {\n    rowsPerPage: 10,\n    page: 0,\n    userList: [],\n    shouldOpenEditorDialog: false,\n    shouldOpenConfirmationDialog: false\n  };\n\n  setPage = page => {\n    this.setState({ page });\n  };\n\n  setRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleChangePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n\n  handleDialogClose = () => {\n    this.setState({\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false\n    });\n    this.updatePageData();\n  };\n\n  handleDeleteUser = user => {\n    this.setState({\n      user,\n      shouldOpenConfirmationDialog: true\n    });\n  };\n\n  handleConfirmationResponse = () => {\n    deleteUser(this.state.user).then(() => {\n      this.handleDialogClose();\n    });\n  };\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n\n  updatePageData = () => {\n    // getAllEmployees().then(({ data }) => this.setState({ userList: [...data] }));\n    let searchDto = {}\n    searchDto.keyword = \"abc\";\n    getAllEmployees(searchDto).then(({ data }) => {\n      this.setState({ userList: [...data] })\n      console.log(this.state.userList);\n    })\n  };\n\n  render() {\n    let {\n      rowsPerPage,\n      page,\n      userList,\n      shouldOpenConfirmationDialog,\n      shouldOpenEditorDialog\n    } = this.state;\n    return (\n      <div className=\"m-sm-30\">\n        <div className=\"mb-sm-30\">\n          <Breadcrumb routeSegments={[{ name: \"Employee Table\" }]} />\n        </div>\n\n        <TextField id=\"standard-basic\" label=\"Search\" style={{ marginLeft: \"20px\" }} />\n\n        <Checkbox\n          value=\"checkEmployId\"\n          inputProps={{ 'aria-label': 'Checkbox A' }}\n          text=\"Mã nhân viên\"\n        />\n        <span>Mã nhân viên</span>\n        <Checkbox\n          value=\"checkEmployName\"\n          inputProps={{ 'aria-label': 'Checkbox A' }}\n          text=\"Tên  nhân viên\"\n        />\n        <span>Tên Nhân viên</span>\n        <Checkbox\n          value=\"checkEmployEmail\"\n          inputProps={{ 'aria-label': 'Checkbox A' }}\n          text=\"Mã nhân viên\"\n        />\n        <span>Email</span>\n        <Checkbox\n          value=\"checkEmployPhone\"\n          inputProps={{ 'aria-label': 'Checkbox A' }}\n          text=\"Mã nhân viên\"\n        />\n        <span>Số điện thoại</span>\n        <Checkbox\n          value=\"checkEmployAge\"\n          inputProps={{ 'aria-label': 'Checkbox A' }}\n          text=\"Tuổi nhân viên\"\n        />\n        <span>Tuổi</span>\n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"primary\"\n          //onClick={() => this.setState({ shouldOpenEditorDialog: true })}\n          style={{\n            marginLeft: \"10px\",\n            marginRight: \"10px\"\n          }}\n        >\n          Tìm kiếm\n        </Button>\n\n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginRight: \"10px\" }}\n          onClick={() => this.setState({ shouldOpenEditorDialog: true })}\n        >\n          Add New Member\n        </Button>\n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginRight: \"20px\" }}\n        //onClick={() => this.setState({ shouldOpenEditorDialog: true })}\n        >\n          Xuất file excel\n        </Button>\n\n\n\n\n        <Card className=\"w-100 overflow-auto\" elevation={6}>\n          <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", minWidth: \"750px\" }}>\n            <TableHead>\n              <TableRow>\n                <TableCell>STT</TableCell>\n                <TableCell>Id</TableCell>\n                <TableCell>Mã nhân viên</TableCell>\n                <TableCell>Tên nhân viên</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Số điện thoại</TableCell>\n                <TableCell>Tuổi</TableCell>\n\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {userList\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((user, index) => (\n                  <TableRow key={shortid.generate()}>\n                    <TableCell className=\"px-0\" align=\"left\">\n                    {  page*rowsPerPage}\n                    </TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.id}\n                    </TableCell>\n                    <TableCell className=\"px-0\">\n                      {user.code}\n                    </TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.name}\n                    </TableCell>\n\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.email}\n                    </TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.phone}\n                    </TableCell>\n                    <TableCell className=\"px-0\">\n                      {user.isActive ? (\n                        <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\n                          active\n                        </small>\n                      ) : (\n                          <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\n                            inactive\n                          </small>\n                        )}\n                    </TableCell>\n                    <TableCell className=\"px-0 border-none\">\n                      <IconButton\n                        onClick={() =>\n                          this.setState({\n                            uid: user.id,\n                            shouldOpenEditorDialog: true\n                          })\n                        }\n                      >\n                        <Icon color=\"primary\">edit</Icon>\n                      </IconButton>\n                      <IconButton onClick={() => this.handleDeleteUser(user)}>\n                        <Icon color=\"error\">delete</Icon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n\n          <TablePagination\n            className=\"px-16\"\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={userList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\"\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.setRowsPerPage}\n          />\n\n          {shouldOpenEditorDialog && (\n            <EmployeeTestEditorDialog\n              handleClose={this.handleDialogClose}\n              open={shouldOpenEditorDialog}\n              uid={this.state.uid}\n            />\n          )}\n          {shouldOpenConfirmationDialog && (\n            <ConfirmationDialog\n              open={shouldOpenConfirmationDialog}\n              onConfirmDialogClose={this.handleDialogClose}\n              onYesClick={this.handleConfirmationResponse}\n              text=\"Are you sure to delete?\"\n            />\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default EmployeeTestTable;\n"]},"metadata":{},"sourceType":"module"}